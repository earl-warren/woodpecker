variables:
  - &golang_image 'golang:1.19.5'
  - &node_image 'node:18-alpine'
  - &xgo_image 'techknowlogick/xgo:go-1.19.5'
  - &xgo_version 'go-1.19.5'
  - &platforms_release 'linux/amd64'
  - &platforms_server 'linux/amd64'
  - &platforms_preview 'linux/amd64'
  - &platforms_alpine 'linux/amd64'

when:
  branch: ${CI_REPO_DEFAULT_BRANCH}
  event: push

pipeline:
  vendor:
    image: *golang_image
    pull: true
    commands:
      - go mod vendor

  build-web:
    image: *node_image
    directory: web/
    commands:
      - corepack enable
      - pnpm install --frozen-lockfile
      - pnpm build

  cross-compile-server:
    image: *xgo_image
    pull: true
    commands:
      - apt update
      - apt install -y tree
      - make cross-compile-server
    environment:
      PLATFORMS: linux|amd64
      TAGS: bindata sqlite sqlite_unlock_notify netgo
      XGO_VERSION: *xgo_version

  publish-next-server:
    image: woodpeckerci/plugin-docker-buildx
    group: docker
    secrets: [docker_username, docker_password]
    settings:
      registry: codeberg.org
      repo: codeberg.org/${CI_REPO}-server
      dockerfile: docker/Dockerfile.server.multiarch
      platforms: *platforms_server
      tag: [next, "next-${CI_COMMIT_SHA:0:10}"]

  publish-next-agent:
    group: docker
    image: woodpeckerci/plugin-docker-buildx
    secrets: [docker_username, docker_password]
    settings:
      registry: codeberg.org
      repo: codeberg.org/${CI_REPO}-agent
      dockerfile: docker/Dockerfile.agent.multiarch
      platforms: *platforms_release
      tag: [next, "next-${CI_COMMIT_SHA:0:10}"]

  publish-next-cli:
    group: docker
    image: woodpeckerci/plugin-docker-buildx
    secrets: [docker_username, docker_password]
    settings:
      registry: codeberg.org
      repo: codeberg.org/${CI_REPO}-cli
      dockerfile: docker/Dockerfile.cli.multiarch
      platforms: *platforms_release
      tag: [next, "next-${CI_COMMIT_SHA:0:10}"]
